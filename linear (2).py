# -*- coding: utf-8 -*-
"""Linear.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jJQ-DgJxa_Kc47L5l8ISPkEgvaWk-P-o
"""

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load the dataset from the CSV file
data = pd.read_csv('Assignment 9.csv')

# Display the first few rows of the dataset
print(data.head())

# Display dataset information
print(data.info())

# Separate the features (X) and target (y)
# Assuming the target variable (home prices) is named 'medv'
X = data.drop(columns=['medv'])  # Features (all columns except 'medv')
y = data['medv']  # Target variable (home prices)

# Split the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Evaluate the model's performance
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error (MSE): {mse}")
print(f"R-squared (R2): {r2}")

# Visualize the predicted vs actual prices
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, edgecolors='k', c='lime', alpha=0.7, s=100)
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--', lw=3)
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.title('Actual vs Predicted Home Prices')
plt.show()